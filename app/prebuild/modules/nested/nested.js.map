{"version":3,"sources":["app/modules/nested/nested.js"],"names":[],"mappings":";AACC,aAAU;;;AAEP,SAAO,CAAC,MAAM,CAAC,sBAAsB,EAAE,EAAE,CAAC;;;GAGzC,MAAM,CAAC,CAAC,gBAAgB,EAAE,UAAS,cAAc,EAAE;AAChD,kBAAc,CAAC,IAAI,CAAC,SAAS,EAAE;AAC3B,iBAAW,EAAE,4BAA4B;;AAAA,KAE5C,CAAC,CAAC;GACN,CAAC,CAAC;;;GAGF,UAAU,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,CACxD,UAAU,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAChD,UAAU,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;;;AAGpD,sBAAoB,CAAC,OAAO,GAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AACzD,kBAAgB,CAAC,OAAO,GAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AACrD,mBAAiB,CAAC,OAAO,GAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;;;;;;;AAOtD,WAAS,oBAAoB,CAAC,MAAM,EAAE,UAAU,EAAE;AAC9C,UAAM,CAAC,QAAQ,GAAG,MAAM,CAAC;;;AAGzB,cAAU,CAAC,YAAU;AACjB,YAAM,CAAC,UAAU,CAAC,sBAAsB,EAAE,EAAC,OAAO,EAAC,sBAAsB,EAAC,CAAC,CAAC;KAC/E,EAAE,IAAI,CAAC,CAAC;;;AAGT,UAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,UAAS,KAAK,EAAE,IAAI,EAAC;AACpD,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACrB,CAAC,CAAC;GACN;;AAED,WAAS,gBAAgB,CAAC,MAAM,EAAE,UAAU,EAAE;AAC1C,QAAI,IAAI,GAAG,IAAI,CAAC;AAChB,UAAM,CAAC,UAAU,GAAG,QAAQ,CAAC;;;AAG7B,UAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,UAAS,KAAK,EAAE,IAAI,EAAC;AACpD,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACrB,CAAC,CAAC;;AAEH,UAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,EAAC,OAAO,EAAC,sBAAsB,EAAC,CAAC,CAAC;;;AAGvE,cAAU,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAS,KAAK,EAAE,IAAI,EAAC;AAClD,aAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACrB,CAAC,CAAC;GAEN;;AAED,WAAS,iBAAiB,CAAC,MAAM,EAAE,UAAU,EAAE;AAC3C,QAAI,IAAI,GAAG,IAAI,CAAC;;;;;;AAMhB,cAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,EAAC,OAAO,EAAC,yBAAyB,EAAC,CAAC,CAAC;GAE3E;CAEJ,CAAA,EAAG,CAAC","file":"app/modules/nested/nested.js","sourcesContent":["'use strict';\n(function(){ // START IIFE\n\n    angular.module('wxApp.modules.nested', [])\n\n    // Declared route \n    .config(['$routeProvider', function($routeProvider) {\n        $routeProvider.when('/nested', {\n            templateUrl: 'modules/nested/nested.html'//,\n            //        controller: 'HomeCtrl' (removed since the html was also referencing the controller causing it to happen twice)\n        });\n    }])\n\n    // Define controller, services, factories, providers, filters\n    .controller('NestedMainController', NestedMainController)\n    .controller('NestedController', NestedController)\n    .controller('Nested2Controller', Nested2Controller);\n\n    // Dependency injections to controller, services, factories, providers, filters\n    NestedMainController.$inject =  ['$scope', '$rootScope'];\n    NestedController.$inject =  ['$scope', '$rootScope'];\n    Nested2Controller.$inject =  ['$scope', '$rootScope'];\n\n    // Sharing models between nested controllers\n    // - http://fdietz.github.io/recipes-with-angular-js/controllers/sharing-models-between-nested-controllers.html\n    // Broadcast, emit, on\n    // - http://toddmotto.com/all-about-angulars-emit-broadcast-on-publish-subscribing/\n    // - http://www.objectpartners.com/2013/08/21/using-services-and-messages-to-share-data-between-controllers-in-angularjs/\n    function NestedMainController($scope, $rootScope) {\n        $scope.mainname = \"main\";\n\n        // broadcast a message \"down\" from the parent to the child\n        setTimeout(function(){\n            $scope.$broadcast('parenttochildmessage', {message:'from parent to child'});\n        }, 2000);\n\n        // listen \"on\" the parent for a message from the child\n        $scope.$on('childtoparentmessage', function(event, args){\n            console.log(args);\n        });\n    }\n\n    function NestedController($scope, $rootScope) {\n        var self = this;\n        $scope.nestedname = \"nested\";\n\n        // listen \"on\" the child for a message \"broadcast\" from the parent\n        $scope.$on('parenttochildmessage', function(event, args){\n            console.log(args);\n        });\n\n        $scope.$emit('childtoparentmessage', {message:'from child to parent'});\n\n        // listen \"on\" the rootScope for a message\n        $rootScope.$on('siblingmessage', function(event, args){\n            console.log(args);\n        });\n\n    }\n\n    function Nested2Controller($scope, $rootScope) {\n        var self = this;\n\n        // \"emit\" or \"broadcast\" a message on the rootScope\n        // - emit will send message only on rootScope\n        // - broadcast will send message on rootScope as well as scope\n        // - http://toddmotto.com/all-about-angulars-emit-broadcast-on-publish-subscribing/\n        $rootScope.$emit('siblingmessage', {message:'hello from your sibling'});\n\n    }\n\n})(); // END IIFE\n"]}