{"version":3,"sources":["app/coremodules/tools/tools.js"],"names":[],"mappings":";AACC,aAAU;;;AAEX,SAAO,CAAC,MAAM,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAC5C,OAAO,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;cAC3B,CAAC,OAAO,GAAG,EAAE,CAAC;;WAEjB,YAAY,GAAE;;;;AAKtB,QAAI,CAAC,eAAe,GAAG,UAAS,MAAM,EAAE,IAAI,EAAE,KAAK,EAAC;AACnD,UAAI,KAAK,IAAI,KAAK,EACjB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAClC,UAAI,KAAK,IAAI,MAAM,EAClB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACnC,aAAO,MAAM,CAAC;;AAEd,eAAS,UAAU,CAAC,CAAC,EAAC,CAAC,EAAE;AACH,YAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EACb,OAAO,CAAC,CAAC,CAAC;AAClB,YAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EACb,OAAO,CAAC,CAAC;AACjB,eAAO,CAAC,CAAC;OAChB;;AAEf,eAAS,WAAW,CAAC,CAAC,EAAC,CAAC,EAAE;AACJ,YAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EACb,OAAO,CAAC,CAAC;AACjB,YAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EACb,OAAO,CAAC,CAAC,CAAC;AAClB,eAAO,CAAC,CAAC;OAChB;KACf,CAAC;;;;;AAKF,QAAI,CAAC,oBAAoB,GAAG,UAAS,MAAM,EAAE,MAAM,EAAC;AAClD,UAAI,SAAS,GAAG,IAAG,CAAC;;AAErB,UAAI,OAAO,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACtC,UAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACvC,UAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,CAAC;;AAEhE,UAAI,IAAI,GAAG,OAAO,GAAG,MAAM,CAAC;AAC5B,UAAI,KAAK,GAAG,QAAQ,GAAG,MAAM,CAAC;;AAE9B,UAAI,OAAO,GAAG,AAAC,CAAA,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA,GAAE,CAAC,GAAG,AAAC,SAAS,GAAG,CAAC,GAAI,KAAK,CAAC;AACpE,UAAI,QAAQ,GAAG,AAAC,CAAA,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA,GAAE,CAAC,GAAG,AAAC,SAAS,GAAG,CAAC,GAAI,IAAI,CAAC;;AAEpE,UAAI,OAAO,GAAG,AAAC,CAAA,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA,GAAE,CAAC,GAAG,AAAC,SAAS,GAAG,CAAC,GAAI,KAAK,CAAC;AACpE,UAAI,QAAQ,GAAG,AAAC,CAAA,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAA,GAAE,CAAC,GAAG,AAAC,SAAS,GAAG,CAAC,GAAI,IAAI,CAAC;AACpE,aAAO;AACN,cAAM,EAAC;AACN,aAAG,EAAG,OAAO;AACb,aAAG,EAAG,QAAQ;SACd;AACD,cAAM,EAAC;AACN,aAAG,EAAG,OAAO;AACb,aAAG,EAAG,QAAQ;SACd;OACD,CAAC;KACF,CAAA;GAED;CAEA,CAAA,EACE,CAAC","file":"app/coremodules/tools/tools.js","sourcesContent":["'use strict';\n(function(){ // START IIFE\n\nangular.module('wxApp.coremodules.tools', [])\n.service('ToolsService', ToolsService);\nToolsService.$inject = [];\n\nfunction ToolsService(){\n\n\t// -- sorting by object attribute\n\t// input : array of objects , attribute to sort by\n\t// output : sorted array of objects\n\tthis.sortByAttribute = function(arrObj, attr, order){\n\t\tif (order == 'asc')\n\t\t\tarrObj = arrObj.sort(compareAsc);\n\t\tif (order == 'desc')\n\t\t\tarrObj = arrObj.sort(compareDesc);\n\t\treturn arrObj;\n\n\t\tfunction compareAsc(a,b) {\n                        if (a[attr] < b[attr])\n                                return -1;\n                        if (a[attr] > b[attr])\n                                return 1;\n                        return 0;\n                }\n\n\t\tfunction compareDesc(a,b) {\n                        if (a[attr] < b[attr])\n                                return 1;\n                        if (a[attr] > b[attr])\n                                return -1;\n                        return 0;\n                }\n\t};\n\n\t// -- find perpendicular line between two coordinate points\n\t// input : 2 points defining a line\n\t// output : 2 points defining a perpendicular line\n\tthis.getPerpendicularLine = function(pointA, pointB){\n\t\t var distPoint = .15;\n\n\t\tvar latDiff = pointB.lat - pointA.lat;\n\t\tvar longDiff = pointB.lon - pointA.lon;\n\t\tvar length = Math.sqrt(latDiff * latDiff + longDiff * longDiff); \n\t\t\n\t\tvar uLat = latDiff / length; \n\t\tvar uLong = longDiff / length;\n\n\t\tvar newLat1 = (pointA.lat + pointB.lat)/2 + (distPoint / 2) * uLong;\n\t\tvar newLong1 = (pointA.lon + pointB.lon)/2 - (distPoint / 2) * uLat;\n\n\t\tvar newLat2 = (pointA.lat + pointB.lat)/2 - (distPoint / 2) * uLong;\n\t\tvar newLong2 = (pointA.lon + pointB.lon)/2 + (distPoint / 2) * uLat;\n\t\treturn {\n\t\t\tpointA:{\n\t\t\t\tlat : newLat1,\n\t\t\t\tlon : newLong1\n\t\t\t},\n\t\t\tpointB:{\n\t\t\t\tlat : newLat2,\n\t\t\t\tlon : newLong2\n\t\t\t}\n\t\t};\n\t}\n\n}\n\n}\n)(); // END IIFE\n\n"]}