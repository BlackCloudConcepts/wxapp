{"version":3,"sources":["app/coremodules/conversions/conversions.js"],"names":[],"mappings":"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","file":"app/coremodules/conversions/conversions.js","sourcesContent":["'use strict';\n(function(){ // START IIFE\n\nangular.module('wxApp.coremodules.conversions', [])\n.service('ConversionsService', ConversionsService);\nConversionsService.$inject = [];\n\nfunction ConversionsService(){\n\n\t// -- calculates fahrenheit from kelvin\n\t// input : kelvin\n\t// output : fahrenheit\n\tthis.getTemperatureKelvinToFahrenheit = function(kelvin){\n\t\tvar f = (9/5)*(kelvin - 273) + 32;\n\t\tvar multiplier = Math.pow(10,2);\n\t\tf = Math.round(f * multiplier) / multiplier;\n\t\treturn f;\n\t};\n\n\t// -- calculates deg to text for wind direction\n\t// input : deg\n\t// output : text\n\tthis.getWindDirectionDegToText = function(deg){\n\t\tif (deg>11.25 && deg<33.75){\n\t\t    \treturn \"NNE\";\n\t\t} else if (deg>33.75 && deg<56.25){\n\t\t \treturn \"ENE\";\n\t\t} else if (deg>56.25 && deg<78.75){\n\t\t    \treturn \"E\";\n\t\t} else if (deg>78.75 && deg<101.25){\n\t\t    \treturn \"ESE\";\n\t\t} else if (deg>101.25 && deg<123.75){\n\t\t    \treturn \"ESE\";\n\t\t} else if (deg>123.75 && deg<146.25){\n\t\t    \treturn \"SE\";\n\t\t} else if (deg>146.25 && deg<168.75){\n\t\t    \treturn \"SSE\";\n\t\t} else if (deg>168.75 && deg<191.25){\n\t\t    \treturn \"S\";\n\t\t} else if (deg>191.25 && deg<213.75){\n\t\t    \treturn \"SSW\";\n\t\t} else if (deg>213.75 && deg<236.25){\n\t\t    \treturn \"SW\";\n\t\t} else if (deg>236.25 && deg<258.75){\n\t\t    \treturn \"WSW\";\n\t\t} else if (deg>258.75 && deg<281.25){\n\t\t    \treturn \"W\";\n\t\t} else if (deg>281.25 && deg<303.75){\n\t\t    \treturn \"WNW\";\n\t\t} else if (deg>303.75 && deg<326.25){\n\t\t    \treturn \"NW\";\n\t\t} else if (deg>326.25 && deg<348.75){\n\t\t    \treturn \"NNW\";\n\t\t} else{\n\t\t    \treturn \"N\"; \n\t\t}\t\n\t};\n\n\t// -- calculates the distance between to coordinate points \n\t// - test w/ http://www.distancefromto.net/\n\t// input : lat1, lon1, lat2, lon2\n\t// output : distance in km\n\tthis.getCoordinatesToDistance = function(lat1,lon1,lat2,lon2){\n\t\tvar R = 6371; // Radius of the earth in km\n\t\tvar dLat = deg2rad(lat2-lat1);  // deg2rad below\n\t\tvar dLon = deg2rad(lon2-lon1); \n\t\tvar a = \n\t\t\tMath.sin(dLat/2) * Math.sin(dLat/2) +\n\t\t    \tMath.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n\t\t    \tMath.sin(dLon/2) * Math.sin(dLon/2)\n\t\t    \t; \n\t\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n\t\tvar d = R * c; // Distance in km\n\t\treturn d;\n\t};\n\n\tfunction deg2rad(deg) {\n  \t\treturn deg * (Math.PI/180);\n\t}\n}\n\n}\n)(); // END IIFE\n\n"]}