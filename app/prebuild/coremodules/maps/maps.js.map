{"version":3,"sources":["app/coremodules/maps/maps.js"],"names":[],"mappings":"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","file":"app/coremodules/maps/maps.js","sourcesContent":["'use strict';\n(function(){ // START IIFE\n\nangular.module('wxApp.coremodules.maps', ['wxApp.coremodules.conversions', 'wxApp.coremodules.wxattributes', 'wxApp.coremodules.tools'])\n.service('MapsService', MapsService);\nMapsService.$inject = ['ConversionsService', 'WxAttributesService', 'ToolsService'];\n\nfunction MapsService(ConversionsService, WxAttributesService, ToolsService){\n\n\t// generic mapping function to route to appropriate service\n\t// input: arrCities - array of cities and their related data\n        //      : currentRegion - current region of cities to limit list to and focus map on\n        //      : containerId - div to put the map in   \n\tthis.drawMap = function(arrCities, currentRegion, containerId){\n\t\tthis.drawGoogleMap(arrCities, currentRegion, containerId);\n\t}\n\n\t// draws google map with markers and popups for indicated locations\n\t// input: arrCities - array of cities and their related data\n\t//      : currentRegion - current region of cities to limit list to and focus map on\n\t//      : containerId - div to put the map in\t\n\tthis.drawGoogleMap = function(arrCities, currentRegion, containerId){\n\t\t// filter out cities by region\n\t\tvar arr = [];\n\t\tfor (var i = 0;i < arrCities.length; i++){\n\t\t\tif (arrCities[i].region == currentRegion){\n\t\t\t\tarr.push(arrCities[i]);\n\t\t\t}\n\t\t}\n\t\tarrCities = arr;\n\n\t\t// draw map\n\t\tvar focusCoords = {};\n\t\tswitch (currentRegion){\n\t\t\tcase 'TX': \n\t\t\t\tfocusCoords.zoom = 7;\n\t\t\t\tfocusCoords.lat = 30.76;\n\t\t\t\tfocusCoords.lon = -98.68;\n\t\t\t\tbreak;\n\t\t\tcase 'OK': \n\t\t\t\tfocusCoords.zoom = 8;\n\t\t\t\tfocusCoords.lat = 35.47;\n\t\t\t\tfocusCoords.lon = -97.52;\n\t\t\t\tbreak;\n\t\t}\n\t\tvar mapOptions = {\n\t\t\tcenter: { lat: focusCoords.lat, lng: focusCoords.lon},\n\t\t\tzoom: focusCoords.zoom\n\t\t};\n\t\tvar map = new google.maps.Map(document.getElementById(containerId), mapOptions);\n\t\n\t\t// add dryline layers\n\t\t// - http://geojson.org/geojson-spec.html#linestring\t\n\t\tvar drylineValues = WxAttributesService.calculateDrylineValues(arrCities, currentRegion);\n\n\t\t// calculate the top delta's in drylines\n\t\tvar drylineCoordinates = [];\n\t\tfor (var i = 0; i < 6;i++){\n\t\t\tvar points = ToolsService.getPerpendicularLine(\n\t\t\t\t{lat:drylineValues[i].cityACoord.lat,lon:drylineValues[i].cityACoord.lon},\n\t\t\t\t{lat:drylineValues[i].cityBCoord.lat,lon:drylineValues[i].cityBCoord.lon}\n\t\t\t);\n\t\t\tdrylineCoordinates.push({\n\t\t\t\tcoords : [[[points.pointA.lon, points.pointA.lat],[points.pointB.lon, points.pointB.lat]]],\n\t\t\t\tdelta : drylineValues[i].delta\n\t\t\t});\n\t\t}\n\n\t\t// define generic feature template\n\t\tvar featureTemplate = {\n\t\t\t\"type\": \"Feature\",\n\t\t\t\"properties\": {\n\t\t\t\t\"delta\": undefined,\n\t\t\t},\n\t\t\t\"geometry\": {\n\t\t\t\t\"type\": \"MultiLineString\",\n\t\t\t\t\"coordinates\": undefined\n\t\t\t},\n\t\t\t\"style\" : {\n\t\t\t\t\"strokeColor\" : \"green\",\n\t\t\t\t\"strokeWeight\" : 4\n\t\t\t}\n\t\t}\n\t\t\n\t\t// define features data geoJSON object\n\t\tvar myData = {\n                        \"type\": \"FeatureCollection\",\n                        \"features\": []\n\t\t};\n\n\t\t// add features for each dryline to be displayed\n\t\tfor (var i = 0;i < drylineCoordinates.length;i++){\n\t\t\t// clone object\n\t\t\tvar feature = JSON.parse(JSON.stringify(featureTemplate));\n\t\t\tfeature.properties.delta = drylineCoordinates[i].delta;\n\t\t\tfeature.geometry.coordinates = drylineCoordinates[i].coords;\n\t\t\tmyData.features.push(feature);\n\t\t}\n\n\t\t// render geoJSON data\n\t\tmap.data.addGeoJson(myData);\n\n\t\t// set colors on drylines based on delta\n\t\tmap.data.setStyle(function(feature) {\n\t\t    \tvar delta = feature.getProperty('delta');\n\t\t\tvar color = 'blue';\n\t\t\tif (delta > 1)\n\t\t\t\tcolor = 'red';\n\t\t\telse if (delta > .75)\n\t\t\t\tcolor = 'orange';\n\t\t\telse if (delta > .5)\n\t\t\t\tcolor = 'yellow';\n\t\t\telse if (delta > .1)\n\t\t\t\tcolor = 'green';\n\t\t    \treturn {\n\t\t      \t\tstrokeColor: color,\n\t\t      \t\tstrokeWeight: 4\n\t\t    \t};\n\t\t});\n\n\t\t// add markers (icons/popups)\n\t\tvar markers = {};\n\t\tfor (var i = 0;i < arrCities.length;i++){\n\t\t\t(function(){\n\t\t\t\tvar name = arrCities[i].name;\n\t\t\t\tvar temp = ConversionsService.getTemperatureKelvinToFahrenheit(arrCities[i].main.temp);\n\t\t\t\tvar pressure = arrCities[i].main.pressure;\n\t\t\t\tvar humidity = arrCities[i].main.humidity;\n\t\t\t\tvar windspeed = arrCities[i].wind.speed;\n\t\t\t\tvar winddirection = ConversionsService.getWindDirectionDegToText(arrCities[i].wind.deg);\n\t\t\t\tvar contentString = '<div id=\"content\" style=\"width:200px\">'+\n\t\t\t\t\t'<div id=\"bodyContent\">'+\n\t\t\t\t\t'<div>'+name+'</div>'+\n\t\t\t\t\t'<div style=\"font-size:8pt;\">Temperature: '+temp+' &deg;F</div>'+\n\t\t\t\t\t'<div style=\"font-size:8pt;\">Pressure: '+pressure+' mb</div>'+\n\t\t\t\t\t'<div style=\"font-size:8pt;\">Humidity: '+humidity+' %</div>'+\n\t\t\t\t\t'<div style=\"font-size:8pt;\">Wind Speed: '+windspeed+' km/h</div>'+\n\t\t\t\t\t'<div style=\"font-size:8pt;\">Wind Direction: '+winddirection+'</div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'</div>';\n\n\t\t\t\tvar infowindow = new google.maps.InfoWindow({\n\t\t\t\t\tcontent: contentString\n\t\t\t\t});\n\n\t\t\t\tvar lat = arrCities[i].coord.lat;\n\t\t\t\tvar lon = arrCities[i].coord.lon;\n\t\t\t\tvar marker = new google.maps.Marker({\n\t\t\t\t\tposition: new google.maps.LatLng(lat,lon),\n\t\t\t\t\tmap: map,\n\t\t\t\t\ttitle:name,\n\t\t\t\t\ticon:'http://cdnimages.magicseaweed.com/30x30/5.png'\n\t\t\t\t});\n\t\t\t\tmarkers[i] = marker;\n\t\t\t\tvar x = i;\n\t\t\t\tgoogle.maps.event.addListener(marker, 'click', function() {\n\t\t\t\t\tinfowindow.open(map,markers[x]);\n\t\t\t\t});\n\t\t\t})();\n\t\t}\n\t}\n       \n}\n\n}\n)(); // END IIFE\n"]}