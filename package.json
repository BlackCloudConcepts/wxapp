{
  "name": "angularjs-seed",
  "version": "1.2.0",
  "description": "A starter project for angular js",
  "devDependencies": {
    "phantomjs": "*",
    "karma": "*",
    "karma-junit-reporter": "*",
    "karma-jasmine": "*",
    "karma-ng-scenario": "*"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/angular/angular-seed.git"
  },
  "bugs": {
    "url": "https://github.com/angular/angular-seed/issues"
  },
  "readme": "# angular-seed â€” the seed for AngularJS apps\n\nThis project is an application skeleton for a typical [AngularJS](http://angularjs.org/) web app.\nYou can use it to quickly bootstrap your angular webapp projects and dev environment for these\nprojects.\n\nThe seed contains AngularJS libraries, test libraries and a bunch of scripts all preconfigured for\ninstant web development gratification. Just clone the repo (or download the zip/tarball), start up\nour (or yours) webserver and you are ready to develop and test your application.\n\nThe seed app doesn't do much, just shows how to wire two controllers and views together. You can\ncheck it out by opening app/index.html in your browser (might not work file `file://` scheme in\ncertain browsers, see note below).\n\n_Note: While angular is client-side-only technology and it's possible to create angular webapps that\ndon't require a backend server at all, we recommend hosting the project files using a local\nwebserver during development to avoid issues with security restrictions (sandbox) in browsers. The\nsandbox implementation varies between browsers, but quite often prevents things like cookies, xhr,\netc to function properly when an html page is opened via `file://` scheme instead of `http://`._\n\n\n## How to use angular-seed\n\nClone the angular-seed repository and start hacking...\n\n\n### Running the app during development\n\nYou can pick one of these options:\n\n* serve this repository with your webserver\n* install node.js and run `scripts/web-server.js`\n\nThen navigate your browser to `http://localhost:<port>/app/index.html` to see the app running in\nyour browser.\n\n\n### Running the app in production\n\nThis really depends on how complex is your app and the overall infrastructure of your system, but\nthe general rule is that all you need in production are all the files under the `app/` directory.\nEverything else should be omitted.\n\nAngular apps are really just a bunch of static html, css and js files that just need to be hosted\nsomewhere, where they can be accessed by browsers.\n\nIf your Angular app is talking to the backend server via xhr or other means, you need to figure\nout what is the best way to host the static files to comply with the same origin policy if\napplicable. Usually this is done by hosting the files by the backend server or through\nreverse-proxying the backend server(s) and a webserver(s).\n\n\n### Running unit tests\n\nWe recommend using [jasmine](http://pivotal.github.com/jasmine/) and\n[Karma](http://karma-runner.github.io) for your unit tests/specs, but you are free\nto use whatever works for you.\n\nRequires [node.js](http://nodejs.org/), Karma (`sudo npm install -g karma`) and a local\nor remote browser.\n\n* start `scripts/test.sh` (on windows: `scripts\\test.bat`)\n  * a browser will start and connect to the Karma server (Chrome is default browser, others can be captured by loading the same url as the one in Chrome or by changing the `config/karma.conf.js` file)\n* to run or re-run tests just change any of your source or test javascript files\n\n\n### End to end testing\n\nAngular ships with a baked-in end-to-end test runner that understands angular, your app and allows\nyou to write your tests with jasmine-like BDD syntax.\n\nRequires a webserver, node.js + `./scripts/web-server.js` or your backend server that hosts the angular static files.\n\nCheck out the\n[end-to-end runner's documentation](http://docs.angularjs.org/guide/dev_guide.e2e-testing) for more\ninfo.\n\n* create your end-to-end tests in `test/e2e/scenarios.js`\n* serve your project directory with your http/backend server or node.js + `scripts/web-server.js`\n* to run do one of:\n  * open `http://localhost:port/test/e2e/runner.html` in your browser\n  * run the tests from console with [Karma](http://karma-runner.github.io) via\n    `scripts/e2e-test.sh` or `script/e2e-test.bat`\n\n### Continuous Integration\n\nCloudBees have provided a CI/deployment setup:\n\n<a href=\"https://grandcentral.cloudbees.com/?CB_clickstart=https://raw.github.com/CloudBees-community/angular-js-clickstart/master/clickstart.json\"><img src=\"https://d3ko533tu1ozfq.cloudfront.net/clickstart/deployInstantly.png\"/></a>\n\nIf you run this, you will get a cloned version of this repo to start working on in a private git repo, \nalong with a CI service (in Jenkins) hosted that will run unit and end to end tests in both Firefox and Chrome.\n\n### Receiving updates from upstream\n\nWhen we upgrade angular-seed's repo with newer angular or testing library code, you can just\nfetch the changes and merge them into your project with git.\n\n\n## Directory Layout\n\n    app/                --> all of the files to be used in production\n      css/              --> css files\n        app.css         --> default stylesheet\n      img/              --> image files\n      index.html        --> app layout file (the main html template file of the app)\n      index-async.html  --> just like index.html, but loads js files asynchronously\n      js/               --> javascript files\n        app.js          --> application\n        controllers.js  --> application controllers\n        directives.js   --> application directives\n        filters.js      --> custom angular filters\n        services.js     --> custom angular services\n      lib/              --> angular and 3rd party javascript libraries\n        angular/\n          angular.js        --> the latest angular js\n          angular.min.js    --> the latest minified angular js\n          angular-*.js      --> angular add-on modules\n          version.txt       --> version number\n      partials/             --> angular view partials (partial html templates)\n        partial1.html\n        partial2.html\n\n    config/karma.conf.js        --> config file for running unit tests with Karma\n    config/karma-e2e.conf.js    --> config file for running e2e tests with Karma\n\n    scripts/            --> handy shell/js/ruby scripts\n      e2e-test.sh       --> runs end-to-end tests with Karma (*nix)\n      e2e-test.bat      --> runs end-to-end tests with Karma (windows)\n      test.bat          --> autotests unit tests with Karma (windows)\n      test.sh           --> autotests unit tests with Karma (*nix)\n      web-server.js     --> simple development webserver based on node.js\n\n    test/               --> test source files and libraries\n      e2e/              -->\n        runner.html     --> end-to-end test runner (open in your browser to run)\n        scenarios.js    --> end-to-end specs\n      lib/\n        angular/                --> angular testing libraries\n          angular-mocks.js      --> mocks that replace certain angular services in tests\n          angular-scenario.js   --> angular's scenario (end-to-end) test runner library\n          version.txt           --> version file\n      unit/                     --> unit level specs/tests\n        controllersSpec.js      --> specs for controllers\n        directivessSpec.js      --> specs for directives\n        filtersSpec.js          --> specs for filters\n        servicesSpec.js         --> specs for services\n\n## Contact\n\nFor more information on AngularJS please check out http://angularjs.org/\n",
  "readmeFilename": "README.md",
  "_id": "angularjs-seed@1.2.0",
  "dist": {
    "shasum": "b63490849305a62c5de87bae6bbdd29c7f65a1ca"
  },
  "_from": "angularjs-seed@",
  "_resolved": "https://registry.npmjs.org/angularjs-seed/-/angularjs-seed-1.2.0.tgz"
}
